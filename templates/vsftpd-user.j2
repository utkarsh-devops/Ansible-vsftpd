#!/bin/bash

DB="{{ vsftpd_pwd_file }}"
LOCAL_ROOT="{{ vsftpd_local_root }}"

function usage() {
  printf "\n"
  printf "Usage `basename $0`:\n"
  printf "  add     <user name> <password> [<path to db file>]  # Add new user\n"
  printf "  upgrade <user name> <password> [<path to db file>]  # Upgrade password of the user\n"
  printf "  del     <user name> [<path to db file>]             # Delete the user\n"
  printf "  list    [<path to db file>]                         # Show users\n"
  printf "\n"
  printf "Predefined variable:\n"
  printf "  User DB: $DB\n"
  printf "  Local root: $LOCAL_ROOT/   # Where will be create directory of the user\n"
  printf "\n"
}

[ ! $1 ] && usage && exit
[ $1 == "-h" ] && usage && exit
[ $1 == "--help" ] && usage && exit


if [[ $1 == "add" ]]; then
  [ $4 ] && DB=$4

  grep $2 $DB > /dev/null 2>&1
  [ $? == "0" ] && printf "The \'$2\' already exist. Exit.\n" && exit 1

  echo "$2:`openssl passwd -1 $3`" >> $DB
  mkdir $LOCAL_ROOT/$2
  chown ftp:ftp $LOCAL_ROOT/$2

elif [[ $1 == "upgrade" ]]; then
  [ $4 ] && DB=$4

  grep --invert-match $2 $DB > $DB.tmp
  mv $DB.tmp $DB
  echo "$2:`openssl passwd -1 $3`" >> $DB

elif [[ $1 == "del" ]]; then
  [ $3 ] && DB=$3

  grep --invert-match $2 $DB > $DB.tmp
  mv $DB.tmp $DB

elif [[ $1 == "list" ]]; then
  [ $2 ] && DB=$2

  cat $DB | cut -d ":" -f 1

fi
